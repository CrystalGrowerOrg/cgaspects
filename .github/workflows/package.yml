name: Build package

on: [push, pull_request]

jobs:
  build:
    # Check if the created reference is a tag
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        include:
          - os: macos-latest
            python-version: '3.11'
            arch: 'arm64'
            build_script: ./scripts/macos_bundle.sh
            package_script: ./scripts/bundle_disk_image.sh
          - os: macos-13
            python-version: '3.11'
            arch: 'x86_64'
            build_script: ./scripts/macos_bundle.sh
            package_script: ./scripts/bundle_disk_image.sh
          - os: windows-latest
            python-version: '3.11'
            arch: 'x86_64'
            build_script: ./scripts/windows_bundle.ps1
            package_script: ./scripts/bundle_zip.ps1
          - os: ubuntu-latest
            python-version: '3.11'
            arch: 'x86_64'
            build_script: ./scripts/linux_bundle.sh
            package_script: ./scripts/bundle_tar_linux.sh

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install .

    - name: Install pyinstaller
      run: |
        python -m pip install pyinstaller

    - name: Build the project
      env:
        ARCH: ${{ matrix.arch }}
      run: ${{ matrix.build_script }}
      
    - name: Package the project
      env:
        ARCH: ${{ matrix.arch }}
      run: ${{ matrix.package_script }}
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}
        path: |
          ./*.dmg
          ./*.zip
          ./*.tar.gz

  create-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download macOS arm64 Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          name: dist-macos-latest
      - name: Download macOS x86_64 Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          name: dist-macos-13
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          name: dist-windows-latest
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          name: dist-ubuntu-latest
      - name: Release
        uses: softprops/action-gh-release@v1
        with: 
          files: | 
            dist/**/*

